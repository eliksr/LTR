import dicom
import os
import numpy
import png
from matplotlib import pyplot, cm
import argparse

pngPath = '/Users/elik/Documents/EliksDocs/thsis_files/learning-to-read-master/image_test.png'
PathDicom = "/Users/elik/Documents/EliksDocs/thsis_files/learning-to-read-master/DCM_TEST"
lstFilesDCM = []
for dirName, subdirList, fileList in os.walk(PathDicom):
    for filename in fileList:
        if ".dcm" in filename.lower():  # check whether the file's DICOM
            lstFilesDCM.append(os.path.join(dirName,filename))

# header ->

# Get ref file
RefDs = dicom.read_file(lstFilesDCM[0])
# Load dimensions based on the number of rows, columns, and slices (along the Z axis)
ConstPixelDims = (int(RefDs.Rows), int(RefDs.Columns), len(lstFilesDCM))
# Load spacing values (in mm)
ConstPixelSpacing = (float(RefDs.PixelSpacing[0]), float(RefDs.PixelSpacing[1]))

x = numpy.arange(0.0, (ConstPixelDims[0])*ConstPixelSpacing[0], ConstPixelSpacing[0])
y = numpy.arange(0.0, (ConstPixelDims[1])*ConstPixelSpacing[1], ConstPixelSpacing[1])

# The array is sized based on 'ConstPixelDims'
ArrayDicom = numpy.zeros(ConstPixelDims, dtype=RefDs.pixel_array.dtype)

# loop through all the DICOM files
try:
    for filenameDCM in lstFilesDCM:
        # read the file
        ds = dicom.read_file(filenameDCM)
        # store the raw image data
        ArrayDicom[:, :, lstFilesDCM.index(filenameDCM)] = ds.pixel_array
except:
    pass

# pyplot.figure(dpi=300)
# pyplot.axes().set_aspect('equal', 'datalim')
# pyplot.set_cmap(pyplot.gray())
# pyplot.matshow(ArrayDicom[:, :, 0], fignum=100, cmap='gray')


# pyplot.imshow(ArrayDicom[:, :, 0])
# pyplot.savefig('/Users/elik/Documents/EliksDocs/thsis_files/learning-to-read-master/image_test.png',bbox_inches='tight', pad_inches=0)
#pyplot.cm.gray
# pyplot.pcolormesh(numpy.flipud(ArrayDicom[:, :, 0]))
# pyplot.show()
print 'the end'